(dp1
S'output'
p2
S"<type 'exceptions.IndentationError'> expected an indented block (controllers/default.py, line 204)"
p3
sS'layer'
p4
S'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - api is an example of Hypermedia API support and access control\n#########################################################################\n\nimport datetime\nimport logging\nimport random\nimport time\nfrom time import gmtime, strftime\nimport threading\nfrom socket import *\nimport json\nimport os\n\ndef index():\n    player_money = 0\n    stock1 = 0\n    stock2 = 0\n    stock3 = 0\n    stock4 = 0\n    if auth.user_id:\n        #session.flash=T("user is logged in")\n        player_file = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n        if player_file is None:\n            redirect(URL(\'default\',\'profileCreate\'))\n        else:\n            player_money = player_file.money\n            stock1 = player_file.stock1_shares_owned\n            stock2 = player_file.stock2_shares_owned\n            stock3 = player_file.stock3_shares_owned\n            stock4 = player_file.stock4_shares_owned\n\n    return dict(player_money = player_money, stock1 = stock1, stock2 = stock2, stock3 = stock3, stock4 = stock4)\n\ndef opponentAI():\n    AI_money = 0\n    AI_stock1 = 0\n    AI_stock2 = 0\n    AI_stock3 = 0\n    AI_stock4 = 0\n    if auth.user_id:\n        AI_file = db(db.AI.user_id == auth.user_id).select(orderby=~db.AI.id).first()\n        if AI_file is None:\n            print("fatal error")\n        else:\n            prevdb1 = db(db.stocks.name == "1").select(orderby=~db.stocks.id).first()\n            prevdb2 = db(db.stocks.name == "2").select(orderby=~db.stocks.id).first()\n            prevdb3 = db(db.stocks.name == "3").select(orderby=~db.stocks.id).first()\n            prevdb4 = db(db.stocks.name == "4").select(orderby=~db.stocks.id).first()\n            prev1 = prevdb1.price #dont need to check if NULL since graphJson ajax is called first\n            prev2 = prevdb2.price\n            prev3 = prevdb3.price\n            prev4 = prevdb4.price\n            AI_money = AI_file.money\n            if int(AI_money) > random.randint(0,5000 ): #check if AI has enough money\n                if int(prev1) < random.randint(0, 49): #arbitrary value to start buying stock\n                    g1y = abs(int(prev1) + random.randint(0,5)) #the random raise\n                    db.stocks.insert(name = "1", price = g1y)\n                    AI_file.stock1_shares_owned = int(AI_file.stock1_shares_owned) + 1 #increase count by 1\n                    AI_file.money = int(AI_file.money) - int(prev1) #take away money\n                    AI_file.update_record(money = AI_file.money, stock1_shares_owned = AI_file.stock1_shares_owned)\n\n                if int(prev2) < 490 and int(AI_money) > 5000:\n                    g2y = abs(int(prev2) + random.randint(0,5)) #the random raise\n                    db.stocks.insert(name = "2", price = g2y)\n                    AI_file.stock2_shares_owned = int(AI_file.stock2_shares_owned) + 1 #increase count by 1\n                    AI_file.money = int(AI_file.money) - int(prev2) #take away money\n                    AI_file.update_record(money = AI_file.money, stock2_shares_owned = AI_file.stock2_shares_owned)                    \n\n                if int(prev3) < 4000 and int(AI_money) > 20000:\n                    g3y = abs(int(prev3) + random.randint(0,5)) #the random raise\n                    db.stocks.insert(name = "3", price = g3y)\n                    AI_file.stock3_shares_owned = int(AI_file.stock3_shares_owned) + 1 #increase count by 1\n                    AI_file.money = int(AI_file.money) - int(prev3) #take away money\n                    AI_file.update_record(money = AI_file.money, stock3_shares_owned = AI_file.stock3_shares_owned)\n\n                if int(prev4) < 35000 and int(AI_money) > 150000:\n                    g4y = abs(int(prev4) + random.randint(0,5)) #the random raise\n                    db.stocks.insert(name = "4", price = g4y)\n                    AI_file.stock4_shares_owned = int(AI_file.stock4_shares_owned) + 1 #increase count by 1\n                    AI_file.money = int(AI_file.money) - int(prev4) #take away money\n                    AI_file.update_record(money = AI_file.money, stock4_shares_owned = AI_file.stock4_shares_owned)\n\n            if int(AI_file.stock1_shares_owned) > 0 and int(prev1) > 51:\n                g1y = abs(int(prev1) - random.randint(0,5)) #random decline\n                db.stocks.insert(name = "1", price = g1y)\n                AI_file.stock1_shares_owned = int(AI_file.stock1_shares_owned) - 1\n                AI_file.money = int(AI_file.money) + int(prev1) #take add money\n                AI_file.update_record(money = AI_file.money, stock1_shares_owned = AI_file.stock1_shares_owned)\n\n            if int(AI_file.stock2_shares_owned) > 0 and int(prev2) > 600:\n                g2y = abs(int(prev2) - random.randint(0,5)) #random decline\n                db.stocks.insert(name = "2", price = g2y)\n                AI_file.stock2_shares_owned = int(AI_file.stock2_shares_owned) - 1\n                AI_file.money = int(AI_file.money) + int(prev2) #take add money\n                AI_file.update_record(money = AI_file.money, stock2_shares_owned = AI_file.stock2_shares_owned)\n\n            if int(AI_file.stock3_shares_owned) > 0 and int(prev3) > 5100:\n                g3y = abs(int(prev3) - random.randint(0,5)) #random decline\n                db.stocks.insert(name = "3", price = g3y)\n                AI_file.stock3_shares_owned = int(AI_file.stock3_shares_owned) - 1\n                AI_file.money = int(AI_file.money) + int(prev3) #take add money\n                AI_file.update_record(money = AI_file.money, stock3_shares_owned = AI_file.stock3_shares_owned)\n\n            if int(AI_file.stock4_shares_owned) > 0 and int(prev4) > 50000:\n                g4y = abs(int(prev4) - random.randint(0,5)) #random decline\n                db.stocks.insert(name = "4", price = g4y)\n                AI_file.stock4_shares_owned = int(AI_file.stock4_shares_owned) - 1\n                AI_file.money = int(AI_file.money) + int(prev4) #take add money\n                AI_file.update_record(money = AI_file.money, stock4_shares_owned = AI_file.stock4_shares_owned)\n\n            AI_money = AI_file.money\n            AI_stock1 = AI_file.stock1_shares_owned\n            AI_stock2 = AI_file.stock2_shares_owned\n            AI_stock3 = AI_file.stock3_shares_owned\n            AI_stock4 = AI_file.stock4_shares_owned\n            if int(AI_money) > 500000:\n                redirect(URL(\'default\', \'win\'))\n    return json.dumps({"AI_money":AI_money, "AI_stock1":AI_stock1,"AI_stock2":AI_stock2,"AI_stock3":AI_stock3,"AI_stock4": AI_stock4})\n\ndef profileCreate():\n    form = SQLFORM(db.stocktrader)\n    if form.process().accepted:\n        db.AI.insert(name = auth.user.first_name+"AI") #inserts AI into database\n        redirect(URL(\'default\',\'index\'))\n    return dict(form = form)\n\ndef graphJson():\n    g1y = 0\n    g2y = 0\n    g3y = 0\n    g4y = 0\n    if auth.user_id:\n        prevdb1 = db(db.stocks.name == "1").select(orderby=~db.stocks.id).first()\n        prevdb2 = db(db.stocks.name == "2").select(orderby=~db.stocks.id).first()\n        prevdb3 = db(db.stocks.name == "3").select(orderby=~db.stocks.id).first()\n        prevdb4 = db(db.stocks.name == "4").select(orderby=~db.stocks.id).first()\n        if prevdb1 is None:\n            prev1 = random.randint(0,100)\n        else:\n            prev1 = prevdb1.price\n        if prevdb2 is None:\n            prev2 = random.randint(0,100)\n        else:\n            prev2 = prevdb2.price\n        if prevdb3 is None:\n            prev3 = random.randint(0,100)\n        else:\n            prev3 = prevdb3.price\n        if prevdb4 is None:\n            prev4 = random.randint(0,100)\n        else:\n            prev4 = prevdb4.price\n        g1y = abs(int(prev1) + random.randint(0,7) - 5)\n        g2y = abs(int(prev2) + random.randint(0,100) -50)\n        g3y = abs(int(prev3) + random.randint(0,1000) -random.randint(0,625))\n        g4y = abs(int(prev4) + random.randint(0,10000) -random.randint(0,7500))\n        volatile = random.randint(0,100)\n\n        if(volatile > 40 and g3y > 0):\n            g3y = g3y - random.randint(0,500)\n            if(g3y < 0):\n                g3y = 0\n        if(volatile > 30 and g4y > 0):\n            g4y = g4y - random.randint(0,5000)\n            if(g4y < 0):\n                g4y = 0\n\n        if g1y > 100:\n            g1y = 100\n        if g2y > 1000:\n            g2y = 1000\n        if g3y > 10000:\n            g3y = 10000\n        if g4y > 100000:\n            g4y = 100000\n        query=(db.stocks.id>0)\n        dbSize = db(query).count()\n        while int(dbSize) > 730: #if the db is larger than 0.5 years worth of data, delete the last entry\n            db(db.stocks.id.name == "1").select(orderby=db.stocks.id).first().delete_record()\n            db(db.stocks.id.name == "2").select(orderby=db.stocks.id).first().delete_record()\n            db(db.stocks.id.name == "3").select(orderby=db.stocks.id).first().delete_record()\n            db(db.stocks.id.name == "4").select(orderby=db.stocks.id).first().delete_record()\n            dbSize = db(db.stocks.id>0).count()\n\n        db.stocks.insert(name = "1", price = g1y)\n        db.stocks.insert(name = "2", price = g2y)\n        db.stocks.insert(name = "3", price = g3y)\n        db.stocks.insert(name = "4", price = g4y)\n    return json.dumps({\'g1y\':g1y, "g2y":g2y,"g3y":g3y,"g4y":g4y})\n\n@auth.requires_login()\ndef win():\n    if auth.user_id:\n        \n\n@auth.requires_login()\ndef reset():\n    if auth.user_id:\n        AI_file = db(db.AI.user_id == auth.user_id).select(orderby=~db.AI.id).first()\n        row = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n        query=(db.stocks.id>0)\n        dbSize = db(query).count()\n        while int(dbSize) > 0: #if the db is larger than 2 years worth of data, delete the last entry\n            db(db.stocks).select(orderby=db.stocks.id).first().delete_record()\n            dbSize = db(db.stocks.id>0).count()\n        if AI_file is None:\n            print("fatal error")\n        else:\n            AI_file.update_record(money = 10000, stock1_shares_owned = 0, stock2_shares_owned = 0, stock3_shares_owned = 0, stock4_shares_owned = 0)\n        if row is None:\n            print("fatal error")\n        else:\n            row.update_record(money = 10000, stock1_shares_owned = 0, stock2_shares_owned = 0, stock3_shares_owned = 0, stock4_shares_owned = 0)    \n    session.flash=T("Reset complete!")\n    redirect(URL(\'default\',\'index\'))\n    return dict()\n\n@auth.requires_login()\ndef buy1():\n    """Add a post."""\n    \'\'\'\n    get price at current index, subtract from user total, store stock value in user file. increase current stock value by randint(0,5)\n    if user total is neg, dont process anything\n    \'\'\'\n    prevdb1 = db(db.stocks.name == "1").select(orderby=~db.stocks.id).first()\n    row = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n    \n    if int(row.money) > 0:\n        prev1 = prevdb1.price\n        g1y = abs(int(prev1) + random.randint(0,5))\n        db.stocks.insert(name = "1", price = g1y)\n        #need check for if player has enough money\n\n        row.stock1_shares_owned = int(row.stock1_shares_owned) + 1\n        row.money = int(row.money) - int(prev1) #take away money\n        row.update_record(money = row.money, stock1_shares_owned = row.stock1_shares_owned)\n    else:\n        session.flash=T("You do not have enough money to buy Shares!")\n    redirect(URL(\'default\',\'index\'))\n    return dict()\n\n@auth.requires_login()\ndef sell1():\n    \'\'\'\n    get price at current index, add to user total, remove stock value from user file, decrease current stock value by randint (0,5)\n    \'\'\'\n    prevdb1 = db(db.stocks.name == "1").select(orderby=~db.stocks.id).first()\n    row = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n    \n    if int(row.stock1_shares_owned) > 0:\n        prev1 = prevdb1.price\n        g1y = abs(int(prev1) - random.randint(0,5))\n        db.stocks.insert(name = "1", price = g1y)\n\n        #need check if user owns any shares in stock\n\n        row.stock1_shares_owned = int(row.stock1_shares_owned) - 1\n        row.money = int(row.money) + int(prev1) #take add money\n        row.update_record(money = row.money, stock1_shares_owned = row.stock1_shares_owned)\n    else:\n        session.flash=T("You don\'t own any Shares of Stock 1!")\n    redirect(URL(\'default\',\'index\'))\n    return dict()\n\n@auth.requires_login()\ndef buy2():\n    """Add a post."""\n    \'\'\'\n    get price at current index, subtract from user total, store stock value in user file. increase current stock value by randint(0,5)\n    if user total is neg, dont process anything\n    \'\'\'\n    prevdb2 = db(db.stocks.name == "2").select(orderby=~db.stocks.id).first()\n    row = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n    \n    if int(row.money) > 0:\n        prev2 = prevdb2.price\n        g2y = abs(int(prev2) + random.randint(0,5))\n        db.stocks.insert(name = "2", price = g2y)\n        #need check for if player has enough money\n\n        row.stock2_shares_owned = int(row.stock2_shares_owned) + 1\n        row.money = int(row.money) - int(prev2) #take away money\n        row.update_record(money = row.money, stock2_shares_owned = row.stock2_shares_owned)\n    else:\n        session.flash=T("You do not have enough money to buy Shares!")\n    redirect(URL(\'default\',\'index\'))\n    return dict()\n\n@auth.requires_login()\ndef sell2():\n    \'\'\'\n    get price at current index, add to user total, remove stock value from user file, decrease current stock value by randint (0,5)\n    \'\'\'\n    prevdb2 = db(db.stocks.name == "2").select(orderby=~db.stocks.id).first()\n    row = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n    \n    if int(row.stock2_shares_owned) > 0:\n        prev2 = prevdb2.price\n        g2y = abs(int(prev2) - random.randint(0,5))\n        db.stocks.insert(name = "2", price = g2y)\n\n        #need check if user owns any shares in stock\n\n        row.stock2_shares_owned = int(row.stock2_shares_owned) - 1\n        row.money = int(row.money) + int(prev2) #take add money\n        row.update_record(money = row.money, stock2_shares_owned = row.stock2_shares_owned)\n    else:\n        session.flash=T("You don\'t own any Shares of Stock 2!")\n    redirect(URL(\'default\',\'index\'))\n    return dict()\n\n@auth.requires_login()\ndef buy3():\n    """Add a post."""\n    \'\'\'\n    get price at current index, subtract from user total, store stock value in user file. increase current stock value by randint(0,5)\n    if user total is neg, dont process anything\n    \'\'\'\n    prevdb3 = db(db.stocks.name == "3").select(orderby=~db.stocks.id).first()\n    row = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n    \n    if int(row.money) > 0:\n        prev3 = prevdb3.price\n        g3y = abs(int(prev3) + random.randint(0,5))\n        db.stocks.insert(name = "3", price = g3y)\n        #need check for if player has enough money\n\n        row.stock3_shares_owned = int(row.stock3_shares_owned) + 1\n        row.money = int(row.money) - int(prev3) #take away money\n        row.update_record(money = row.money, stock3_shares_owned = row.stock3_shares_owned)\n    else:\n        session.flash=T("You do not have enough money to buy Shares!")\n    redirect(URL(\'default\',\'index\'))\n    return dict()\n\n@auth.requires_login()\ndef sell3():\n    \'\'\'\n    get price at current index, add to user total, remove stock value from user file, decrease current stock value by randint (0,5)\n    \'\'\'\n    prevdb3 = db(db.stocks.name == "3").select(orderby=~db.stocks.id).first()\n    row = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n    \n    if int(row.stock3_shares_owned) > 0:\n        prev3 = prevdb3.price\n        g3y = abs(int(prev3) - random.randint(0,5))\n        db.stocks.insert(name = "3", price = g3y)\n\n        #need check if user owns any shares in stock\n\n        row.stock3_shares_owned = int(row.stock3_shares_owned) - 1\n        row.money = int(row.money) + int(prev3) #take add money\n        row.update_record(money = row.money, stock3_shares_owned = row.stock3_shares_owned)\n    else:\n        session.flash=T("You don\'t own any Shares of Stock 3!")\n    redirect(URL(\'default\',\'index\'))\n    return dict()\n\n@auth.requires_login()\ndef buy4():\n    """Add a post."""\n    \'\'\'\n    get price at current index, subtract from user total, store stock value in user file. increase current stock value by randint(0,5)\n    if user total is neg, dont process anything\n    \'\'\'\n    prevdb4 = db(db.stocks.name == "4").select(orderby=~db.stocks.id).first()\n    row = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n    \n    if int(row.money) > 0:\n        prev4 = prevdb4.price\n        g4y = abs(int(prev4) + random.randint(0,5))\n        db.stocks.insert(name = "4", price = g4y)\n        #need check for if player has enough money\n\n        row.stock4_shares_owned = int(row.stock4_shares_owned) + 1\n        row.money = int(row.money) - int(prev4) #take away money\n        row.update_record(money = row.money, stock4_shares_owned = row.stock4_shares_owned)\n    else:\n        session.flash=T("You do not have enough money to buy Shares!")\n    redirect(URL(\'default\',\'index\'))\n    return dict()\n\n@auth.requires_login()\ndef sell4():\n    \'\'\'\n    get price at current index, add to user total, remove stock value from user file, decrease current stock value by randint (0,5)\n    \'\'\'\n    prevdb4 = db(db.stocks.name == "4").select(orderby=~db.stocks.id).first()\n    row = db(db.stocktrader.user_id == auth.user_id).select(orderby=~db.stocktrader.id).first()\n    \n    if int(row.stock4_shares_owned) > 0:\n        prev4 = prevdb4.price\n        g4y = abs(int(prev4) - random.randint(0,5))\n        db.stocks.insert(name = "4", price = g4y)\n\n        #need check if user owns any shares in stock\n\n        row.stock4_shares_owned = int(row.stock4_shares_owned) - 1\n        row.money = int(row.money) + int(prev4) #take add money\n        row.update_record(money = row.money, stock4_shares_owned = row.stock4_shares_owned)\n    else:\n        session.flash=T("You don\'t own any Shares of Stock 4!")\n    redirect(URL(\'default\',\'index\'))\n    return dict()\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_login() \ndef api():\n    """\n    this is example of API with access control\n    WEB2PY provides Hypermedia API (Collection+JSON) Experimental\n    """\n    from gluon.contrib.hypermedia import Collection\n    rules = {\n        \'<tablename>\': {\'GET\':{},\'POST\':{},\'PUT\':{},\'DELETE\':{}},\n        }\n    return Collection(db).process(request,response,rules)\n\nresponse._vars=response._caller(graphJson)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.IndentationError object>"
p13
sS'text'
p14
S"'@auth.requires_login()\\n'"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.IndentationError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.IndentationError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.IndentationError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.IndentationError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.IndentationError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.IndentationError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.IndentationError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.IndentationError'>"
p35
sS'filename'
p36
S"r'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\controllers/default.py'"
p37
sS'lineno'
p38
S'204'
p39
sS'msg'
p40
S"'expected an indented block'"
p41
sS'__doc__'
p42
S"'Improper indentation.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.IndentationError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.IndentationError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.IndentationError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S"('expected an indented block', (r'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\controllers/default.py', 204, 0, '@auth.requires_login()\\n'))"
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'0'
sS'__unicode__'
p57
S'<built-in method __unicode__ of exceptions.IndentationError object>'
p58
sS'__delattr__'
p59
S"<method-wrapper '__delattr__' of exceptions.IndentationError object>"
p60
sS'__repr__'
p61
S"<method-wrapper '__repr__' of exceptions.IndentationError object>"
p62
sS'__hash__'
p63
S"<method-wrapper '__hash__' of exceptions.IndentationError object>"
p64
ssS'evalue'
p65
S'expected an indented block (controllers/default.py, line 204)'
p66
sS'request'
p67
cgluon.html
XML_unpickle
p68
(S's\xf4^\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>StockTrader</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-d4cad388-c06e-42d0-9c1c-c808653dd14d<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_stocktrader</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-059937b1-4bed-4a8c-a113-4124e2721171<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-0fd6fbbb-4995-4b39-8307-a70bb569f32f<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>*/*</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-0fd6fbbb-4995-4b39-8307-a70bb569f32f; session_id_stocktrader=127.0.0.1-059937b1-4bed-4a8c-a113-4124e2721171; session_id_admin=127.0.0.1-d4cad388-c06e-42d0-9c1c-c808653dd14d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/StockTrader/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.89 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_X_REQUESTED_WITH</td><td style="vertical-align:top;">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/StockTrader/default/graphJson.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>52568</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>JackyChiu-PC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Jacky Chiu\\\\Desktop\\\\web2py\\\\applications\\\\StockTrader\\\\&#x27;, &#x27;C:\\\\Users\\\\Jacky Chiu\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\Users\\\\Jacky Chiu\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Jacky Chiu\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x2fc9e68: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;JackyChiu-PC&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Jacky Chiu\\\\Desktop\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Jacky Chiu\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>*/*</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-0fd6fbbb-4995-4b39-8307-a70bb569f32f; session_id_stocktrader=127.0.0.1-059937b1-4bed-4a8c-a113-4124e2721171; session_id_admin=127.0.0.1-d4cad388-c06e-42d0-9c1c-c808653dd14d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/StockTrader/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.89 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_x_requested_with</td><td style="vertical-align:top;">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::5efe:10.0.1.2%14</div></td></tr><tr><td><div>fe80::d1e9:6101:428:fbc7%12</div></td></tr><tr><td><div>2001:0:9d38:90d7:38aa:3eeb:f5ff:fefd</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>10.0.1.2</div></td></tr><tr><td><div>fe80::38aa:3eeb:f5ff:fefd%11</div></td></tr><tr><td><div>JackyChiu-PC</div></td></tr><tr><td><div>JackyChiu-PC.ucsc.edu</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/StockTrader/default/graphJson.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>52568</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/StockTrader/default/graphJson.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>JackyChiu-PC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Jacky Chiu\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.12-stable+timestamp.2015.02.15.23.04.25</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x0045D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x033058B8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x086CD130&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x0045D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x033058B8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x086CD130&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>graphJson</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Jacky Chiu\\\\Desktop\\\\web2py\\\\applications\\\\StockTrader\\\\&#x27;, &#x27;C:\\\\Users\\\\Jacky Chiu\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\Users\\\\Jacky Chiu\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Jacky Chiu\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x2fc9e68: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;JackyChiu-PC&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Jacky Chiu\\\\Desktop\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Jacky Chiu\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::5efe:10.0.1.2%14</div></td></tr><tr><td><div>fe80::d1e9:6101:428:fbc7%12</div></td></tr><tr><td><div>2001:0:9d38:90d7:38aa:3eeb:f5ff:fefd</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>10.0.1.2</div></td></tr><tr><td><div>fe80::38aa:3eeb:f5ff:fefd%11</div></td></tr><tr><td><div>JackyChiu-PC</div></td></tr><tr><td><div>JackyChiu-PC.ucsc.edu</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.12-stable+timestamp.2015.02.15.23.04.25</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 3, 14, 15, 31, 53, 83000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/StockTrader/default/graphJson.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 3, 14, 22, 31, 53, 83000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>StockTrader/127.0.0.1.2015-03-14.15-31-53.2c0f13f4-4e19-43fb-ae02-2ac2faed024d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x08E118D0&gt;</div></td></tr></table></div>'
tRp69
sS'frames'
p70
(lp71
(dp72
S'file'
p73
S'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\gluon\\restricted.py'
p74
sS'dump'
p75
(dp76
S'code'
p77
S"'# -*- coding: utf-8 -*-\\n# this file is released ...les)\\n\\nresponse._vars=response._caller(graphJson)\\n'"
p78
sS'layer'
p79
S"r'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\controllers/default.py'"
p80
sS'global compile2'
p81
S'<function compile2>'
p82
sS'ccode'
p83
S'undefined'
p84
ssS'lnum'
p85
I223
sS'lines'
p86
(dp87
I224
S'        exec ccode in environment'
p88
sI225
S'    except HTTP:'
p89
sI226
S'        raise'
p90
sI227
S'    except RestrictedError:'
p91
sI218
S"    environment['__name__'] = '__restricted__'"
p92
sI219
S'    try:'
p93
sI220
S'        if isinstance(code, types.CodeType):'
p94
sI221
S'            ccode = code'
p95
sI222
S'        else:'
p96
sI223
S'            ccode = compile2(code, layer)'
p97
ssS'call'
p98
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...les)\\n\\nresponse._vars=response._caller(graphJson)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, ...}, layer=r'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\controllers/default.py')"
p99
sS'func'
p100
S'restricted'
p101
sa(dp102
g73
S'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\gluon\\restricted.py'
p103
sg75
(dp104
S'builtincompile'
p105
S'<built-in function compile>'
p106
sS'code'
p107
S"'# -*- coding: utf-8 -*-\\n# this file is released ...les)\\n\\nresponse._vars=response._caller(graphJson)\\n'"
p108
sS'code.rstrip'
p109
S'<built-in method rstrip of str object>'
p110
sS').replace'
p111
g84
sS'layer'
p112
S"r'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\controllers/default.py'"
p113
ssg85
I206
sg86
(dp114
I201
S'def compile2(code, layer):'
p115
sI202
S'    """'
p116
sI203
S"    The ``+'\\\\n'`` is necessary else compile fails when code ends in a comment."
p117
sI204
S'    """'
p118
sI205
S''
sI206
S"    return compile(code.rstrip().replace('\\r\\n', '\\n') + '\\n', layer, 'exec')"
p119
sI207
S''
sI208
S''
sI209
S"def restricted(code, environment=None, layer='Unknown'):"
p120
sI210
S'    """'
p121
ssg98
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...les)\\n\\nresponse._vars=response._caller(graphJson)\\n', layer=r'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\controllers/default.py')"
p122
sg100
S'compile2'
p123
sasS'pyver'
p124
S'Python 2.7.9: C:\\Users\\Jacky Chiu\\Desktop\\web2py\\web2py.exe (prefix: )'
p125
sS'session'
p126
g68
(S's\\\x08\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>5fe0fb73-79d0-49b0-a3ed-4c3ffe5d5251</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 3, 14, 15, 26, 37, 672000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>jchiu6@ucsc.edu</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>Jacky</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>3L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Chiu</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">3</td><td style="vertical-align:top;">:</td><td><div>user_3</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp127
sS'etype'
p128
S"<type 'exceptions.IndentationError'>"
p129
sS'date'
p130
S'Sat Mar 14 15:31:53 2015'
p131
sS'response'
p132
g68
(S's?3\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x09571500&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_stocktrader</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-059937b1-4bed-4a8c-a113-4124e2721171<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div>: </div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>table3cols</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" href="http://www.web2py.com/"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/StockTrader/default/index.json</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div><span class="highlighted">web2py</span></div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/site.json</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design.json/StockTrader</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Controller&#x27;&gt;, False, &#x27;/admin/default/edit.json/StockTrader/controllers/default.py&#x27;), (&lt;lazyT &#x27;View&#x27;&gt;, False, &#x27;/admin/default/edit.json/StockTrader/views/default/graphJson.json&#x27;), (&lt;lazyT &#x27;Layout&#x27;&gt;, False, &#x27;/admin/default/edit.json/StockTrader/views/layout.html&#x27;), (&lt;lazyT &#x27;Stylesheet&#x27;&gt;, False, &#x27;/admin/default/edit.json/StockTrader/static/css/web2py.css&#x27;), (&lt;lazyT &#x27;DB Model&#x27;&gt;, False, &#x27;/admin/default/edit.json/StockTrader/models/db.py&#x27;), (&lt;lazyT &#x27;Menu Model&#x27;&gt;, False, &#x27;/admin/default/edit.json/StockTrader/models/menu.py&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;/StockTrader/appadmin/index.json&#x27;), (&lt;lazyT &#x27;Errors&#x27;&gt;, False, &#x27;/admin/default/errors.json/StockTrader&#x27;), (&lt;lazyT &#x27;About&#x27;&gt;, False, &#x27;/admin/default/about.json/StockTrader&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>web2py.com</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Download&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Support&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/support&#x27;), (&lt;lazyT &#x27;Demo&#x27;&gt;, False, &#x27;http://web2py.com/demo_admin&#x27;), (&lt;lazyT &#x27;Quick Examples&#x27;&gt;, False, &#x27;http://web2py.com/examples/default/examples&#x27;), (&lt;lazyT &#x27;FAQ&#x27;&gt;, False, &#x27;http://web2py.com/AlterEgo&#x27;), (&lt;lazyT &#x27;Videos&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/videos/&#x27;), (&lt;lazyT &#x27;Free Applications&#x27;&gt;, False, &#x27;http://web2py.com/appliances&#x27;), (&lt;lazyT &#x27;Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layouts&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;), (&lt;lazyT &#x27;Recipes&#x27;&gt;, False, &#x27;http://web2pyslices.com/&#x27;), (&lt;lazyT &#x27;Semantic&#x27;&gt;, False, &#x27;http://web2py.com/semantic&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Documentation</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Preface&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/00&#x27;), (&lt;lazyT &#x27;Introduction&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/01&#x27;), (&lt;lazyT &#x27;Python&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/02&#x27;), (&lt;lazyT &#x27;Overview&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/03&#x27;), (&lt;lazyT &#x27;The Core&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/04&#x27;), (&lt;lazyT &#x27;The Views&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/05&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/06&#x27;), (&lt;lazyT &#x27;Forms and Validators&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/07&#x27;), (&lt;lazyT &#x27;Email and SMS&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/08&#x27;), (&lt;lazyT &#x27;Access Control&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/09&#x27;), (&lt;lazyT &#x27;Services&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/10&#x27;), (&lt;lazyT &#x27;Ajax Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/11&#x27;), (&lt;lazyT &#x27;Components and Plugins&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/12&#x27;), (&lt;lazyT &#x27;Deployment Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/13&#x27;), (&lt;lazyT &#x27;Other Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/14&#x27;), (&lt;lazyT &#x27;Buy this book&#x27;&gt;, False, &#x27;http://stores.lulu.com/web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Community</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Groups&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/usergroups&#x27;), (&lt;lazyT &#x27;Twitter&#x27;&gt;, False, &#x27;http://twitter.com/web2py&#x27;), (&lt;lazyT &#x27;Live Chat&#x27;&gt;, False, &#x27;http://webchat.freenode.net/?channels=web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&#x27;plugin_wiki&#x27;, False, &#x27;http://web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Other Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layout Plugins&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;)]</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/graphJson/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_stocktrader</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;C:\\\\Users\\\\Jacky Chiu\\\\Desktop\\\\web2py\\\\applications\\\\StockTrader\\\\sessions\\\\072\\\\0c3\\\\127.0.0.1-059937b1-4bed-4a8c-a113-4124e2721171&#x27;, mode &#x27;rb+&#x27; at 0x05FC9548&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\sessions\\127.0.0.1-059937b1-4bed-4a8c-a113-4124e2721171</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>555533551cfee5f4fe52a9ec34f57c9d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-059937b1-4bed-4a8c-a113-4124e2721171</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_stocktrader</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>StockTrader</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Stocktrader</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/graphJson.json</div></td></tr></table></div>'
tRp133
sS'locals'
p134
(dp135
g4
S"r'C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\controllers/default.py'"
p136
sg6
S"'# -*- coding: utf-8 -*-\\n# this file is released ...les)\\n\\nresponse._vars=response._caller(graphJson)\\n'"
p137
sssS'traceback'
p138
S'Traceback (most recent call last):\n  File "C:\\Users\\Jacky Chiu\\Desktop\\web2py\\gluon\\restricted.py", line 223, in restricted\n    ccode = compile2(code, layer)\n  File "C:\\Users\\Jacky Chiu\\Desktop\\web2py\\gluon\\restricted.py", line 206, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\', \'\\n\') + \'\\n\', layer, \'exec\')\n  File "C:\\Users\\Jacky Chiu\\Desktop\\web2py\\applications\\StockTrader\\controllers/default.py", line 204\n    @auth.requires_login()\n                         ^\nIndentationError: expected an indented block\n'
p139
s.